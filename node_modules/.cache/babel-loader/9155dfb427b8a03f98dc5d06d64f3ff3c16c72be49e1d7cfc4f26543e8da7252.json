{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivam\\\\Downloads\\\\latest\\\\my-app\\\\src\\\\Components\\\\Output.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Box, Button, Text, useToast } from \"@chakra-ui/react\";\nimport { executeCode } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Output = ({\n  editorRef,\n  language\n}) => {\n  _s();\n  const toast = useToast();\n  const [output, setOutput] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const runCode = async () => {\n    const sourceCode = editorRef.current.getValue();\n    if (!sourceCode) return;\n    try {\n      setIsLoading(true);\n      const {\n        run: result\n      } = await executeCode(language, sourceCode);\n      setOutput(result.output.split(\"\\n\"));\n      result.stderr ? setIsError(true) : setIsError(false);\n    } catch (error) {\n      console.log(error);\n      toast({\n        title: \"An error occurred.\",\n        description: error.message || \"Unable to run code\",\n        status: \"error\",\n        duration: 6000\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    w: \"50%\",\n    theme: \"vs-dark\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      mb: 2,\n      fontSize: \"lg\",\n      children: \"Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outline\",\n      colorScheme: \"green\",\n      mb: 4,\n      isLoading: isLoading,\n      onClick: runCode,\n      children: \"Run Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      height: \"75vh\",\n      p: 2,\n      color: isError ? \"red.400\" : \"\",\n      border: \"1px solid\",\n      borderRadius: 4,\n      borderColor: isError ? \"red.500\" : \"#333\",\n      children: output ? output.map((line, i) => /*#__PURE__*/_jsxDEV(Text, {\n        children: line\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }, this)) : 'Click \"Run Code\" to see the output here'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Output, \"/vuUYQR/2sR4+bBoVW5MoHhRXVM=\", false, function () {\n  return [useToast];\n});\n_c = Output;\nexport default Output;\nvar _c;\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"names":["useState","Box","Button","Text","useToast","executeCode","jsxDEV","_jsxDEV","Output","editorRef","language","_s","toast","output","setOutput","isLoading","setIsLoading","isError","setIsError","runCode","sourceCode","current","getValue","run","result","split","stderr","error","console","log","title","description","message","status","duration","w","theme","children","mb","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","variant","colorScheme","onClick","height","p","color","border","borderRadius","borderColor","map","line","i","_c","$RefreshReg$"],"sources":["C:/Users/Shivam/Downloads/latest/my-app/src/Components/Output.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Box, Button, Text, useToast } from \"@chakra-ui/react\";\r\nimport { executeCode } from \"../api\";\r\n\r\nconst Output = ({ editorRef, language }) => {\r\n  const toast = useToast();\r\n  const [output, setOutput] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const runCode = async () => {\r\n    const sourceCode = editorRef.current.getValue();\r\n    if (!sourceCode) return;\r\n    try {\r\n      setIsLoading(true);\r\n      const { run: result } = await executeCode(language, sourceCode);\r\n      setOutput(result.output.split(\"\\n\"));\r\n      result.stderr ? setIsError(true) : setIsError(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast({\r\n        title: \"An error occurred.\",\r\n        description: error.message || \"Unable to run code\",\r\n        status: \"error\",\r\n        duration: 6000,\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box w=\"50%\" theme=\"vs-dark\">\r\n      <Text mb={2} fontSize=\"lg\">\r\n        Output\r\n      </Text>\r\n      <Button\r\n        variant=\"outline\"\r\n        colorScheme=\"green\"\r\n        mb={4}\r\n        isLoading={isLoading}\r\n        onClick={runCode}\r\n      >\r\n        Run Code\r\n      </Button>\r\n      <Box\r\n        height=\"75vh\"\r\n        p={2}\r\n        color={isError ? \"red.400\" : \"\"}\r\n        border=\"1px solid\"\r\n        borderRadius={4}\r\n        borderColor={isError ? \"red.500\" : \"#333\"}\r\n      >\r\n        {output\r\n          ? output.map((line, i) => <Text key={i}>{line}</Text>)\r\n          : 'Click \"Run Code\" to see the output here'}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default Output;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}