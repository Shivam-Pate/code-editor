{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivam\\\\Downloads\\\\latest\\\\my-app\\\\src\\\\Components\\\\Selector.jsx\";\nimport { Box, Button, Menu, MenuButton, MenuItem, MenuList, Text } from \"@chakra-ui/react\";\nimport { LANGUAGE_VERSIONS } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languages = Object.entries(LANGUAGE_VERSIONS);\nconst ACTIVE_COLOR = \"blue.400\";\nconst LanguageSelector = ({\n  language,\n  onSelect\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ml: 2,\n    mb: 4,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      mb: 2,\n      fontSize: \"lg\",\n      children: \"\\uD835\\uDDDF\\uD835\\uDDEE\\uD835\\uDDFB\\uD835\\uDDF4\\uD835\\uDE02\\uD835\\uDDEE\\uD835\\uDDF4\\uD835\\uDDF2:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      isLazy: true,\n      children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n        as: Button,\n        children: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n        bg: \"#110c1b\",\n        children: languages.map(([lang, version]) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          color: lang === language ? ACTIVE_COLOR : \"\",\n          bg: lang === language ? \"gray.900\" : \"transparent\",\n          _hover: {\n            color: ACTIVE_COLOR,\n            bg: \"gray.900\"\n          },\n          onClick: () => onSelect(lang),\n          children: [lang, \"\\xA0\", /*#__PURE__*/_jsxDEV(Text, {\n            as: \"span\",\n            color: \"gray.600\",\n            fontSize: \"sm\",\n            children: [\"(\", version, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)]\n        }, lang, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n_c = LanguageSelector;\nexport default LanguageSelector;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"names":["Box","Button","Menu","MenuButton","MenuItem","MenuList","Text","LANGUAGE_VERSIONS","jsxDEV","_jsxDEV","languages","Object","entries","ACTIVE_COLOR","LanguageSelector","language","onSelect","ml","mb","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","isLazy","as","bg","map","lang","version","color","_hover","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Shivam/Downloads/latest/my-app/src/Components/Selector.jsx"],"sourcesContent":["import {\r\n    Box,\r\n    Button,\r\n    Menu,\r\n    MenuButton,\r\n    MenuItem,\r\n    MenuList,\r\n    Text,\r\n  } from \"@chakra-ui/react\";\r\n  import { LANGUAGE_VERSIONS } from \"../constants\";\r\n  \r\n  const languages = Object.entries(LANGUAGE_VERSIONS);\r\n  const ACTIVE_COLOR = \"blue.400\";\r\n  \r\n  const LanguageSelector = ({ language, onSelect }) => {\r\n    return (\r\n      <Box ml={2} mb={4}>\r\n        <Text mb={2} fontSize=\"lg\">\r\n        ùóüùóÆùóªùó¥ùòÇùóÆùó¥ùó≤:\r\n        </Text>\r\n        <Menu isLazy>\r\n          <MenuButton as={Button}>{language}</MenuButton>\r\n          <MenuList bg=\"#110c1b\">\r\n            {languages.map(([lang, version]) => (\r\n              <MenuItem\r\n                key={lang}\r\n                color={lang === language ? ACTIVE_COLOR : \"\"}\r\n                bg={lang === language ? \"gray.900\" : \"transparent\"}\r\n                _hover={{\r\n                  color: ACTIVE_COLOR,\r\n                  bg: \"gray.900\",\r\n                }}\r\n                onClick={() => onSelect(lang)}\r\n              >\r\n                {lang}\r\n                &nbsp;\r\n                <Text as=\"span\" color=\"gray.600\" fontSize=\"sm\">\r\n                  ({version})\r\n                </Text>\r\n              </MenuItem>\r\n            ))}\r\n          </MenuList>\r\n        </Menu>\r\n      </Box>\r\n    );\r\n  };\r\n  export default LanguageSelector;"],"mappings":";AAAA,SACIA,GAAG,EACHC,MAAM,EACNC,IAAI,EACJC,UAAU,EACVC,QAAQ,EACRC,QAAQ,EACRC,IAAI,QACC,kBAAkB;AACzB,SAASC,iBAAiB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAGC,MAAM,CAACC,OAAO,CAACL,iBAAiB,CAAC;AACnD,MAAMM,YAAY,GAAG,UAAU;AAE/B,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EACnD,oBACEP,OAAA,CAACT,GAAG;IAACiB,EAAE,EAAE,CAAE;IAACC,EAAE,EAAE,CAAE;IAAAC,QAAA,gBAChBV,OAAA,CAACH,IAAI;MAACY,EAAE,EAAE,CAAE;MAACE,QAAQ,EAAC,IAAI;MAAAD,QAAA,EAAC;IAE3B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACPf,OAAA,CAACP,IAAI;MAACuB,MAAM;MAAAN,QAAA,gBACVV,OAAA,CAACN,UAAU;QAACuB,EAAE,EAAEzB,MAAO;QAAAkB,QAAA,EAAEJ;MAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC/Cf,OAAA,CAACJ,QAAQ;QAACsB,EAAE,EAAC,SAAS;QAAAR,QAAA,EACnBT,SAAS,CAACkB,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,OAAO,CAAC,kBAC7BrB,OAAA,CAACL,QAAQ;UAEP2B,KAAK,EAAEF,IAAI,KAAKd,QAAQ,GAAGF,YAAY,GAAG,EAAG;UAC7Cc,EAAE,EAAEE,IAAI,KAAKd,QAAQ,GAAG,UAAU,GAAG,aAAc;UACnDiB,MAAM,EAAE;YACND,KAAK,EAAElB,YAAY;YACnBc,EAAE,EAAE;UACN,CAAE;UACFM,OAAO,EAAEA,CAAA,KAAMjB,QAAQ,CAACa,IAAI,CAAE;UAAAV,QAAA,GAE7BU,IAAI,EAAC,MAEN,eAAApB,OAAA,CAACH,IAAI;YAACoB,EAAE,EAAC,MAAM;YAACK,KAAK,EAAC,UAAU;YAACX,QAAQ,EAAC,IAAI;YAAAD,QAAA,GAAC,GAC5C,EAACW,OAAO,EAAC,GACZ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAbFK,IAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcD,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACU,EAAA,GA/BIpB,gBAAgB;AAgCtB,eAAeA,gBAAgB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}